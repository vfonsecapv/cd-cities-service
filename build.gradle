buildscript {
	ext { springBootVersion = '1.2.1.RELEASE'
		springCloudVersion = '1.1.1.RELEASE'
	}
	repositories { mavenCentral() }
	dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
	baseName = 'cities-service'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories { mavenCentral() }


dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	//runtime("org.hsqldb:hsqldb:1.8.0.10")
	compile("org.springframework.cloud:spring-cloud-spring-service-connector:${springCloudVersion}")
	compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector:${springCloudVersion}")
	runtime("mysql:mysql-connector-java:5.1.25")
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
	}
}

task wrapper(type: Wrapper) { gradleVersion = '1.12' }
